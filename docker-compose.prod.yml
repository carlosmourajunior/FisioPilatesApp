version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=fisiopilates
      - POSTGRES_USER=fisiouser
      - POSTGRES_PASSWORD=fisiopass
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend,*
      - CORS_ALLOWED_ORIGINS=http://localhost:80,http://127.0.0.1:80,http://localhost,http://127.0.0.1
      - CSRF_TRUSTED_ORIGINS=http://localhost:80,http://127.0.0.1:80,http://localhost,http://127.0.0.1
      - DB_NAME=fisiopilates
      - DB_USER=fisiouser
      - DB_PASSWORD=fisiopass
      - DB_HOST=db
      - DB_PORT=5432
    command: >
      bash -c "
        echo 'Waiting for PostgreSQL to be ready...' &&
        while ! python -c 'import psycopg2; psycopg2.connect(host=\"db\", database=\"fisiopilates\", user=\"fisiouser\", password=\"fisiopass\")' 2>/dev/null; do
          echo 'PostgreSQL is unavailable - sleeping' &&
          sleep 1;
        done &&
        echo 'PostgreSQL is up - executing migrations' &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn app.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_PWA=true
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
